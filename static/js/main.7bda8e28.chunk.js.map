{"version":3,"sources":["components/User.js","components/Users.js","components/UserProfile.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["User","className","to","this","props","profile","id","Avatar","name","charAt","React","Component","Users","users","map","user","key","HomeIcon","SvgIcon","d","UserProfile","state","loading","axios","get","match","params","then","response","setState","data","Card","variant","CardContent","src","alt","username","color","email","phone","address","street","suite","city","zipcode","LinearProgress","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","headerstyle","fontSize","textDecoration","padding","ButtonAppBar","classes","AppBar","position","Toolbar","Typography","style","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bda8e28.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nexport default class User extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='user'>\r\n        <ul className='eachUserLink'>\r\n          <li>\r\n            <Link\r\n              to={`/user/${this.props.profile.id}`}\r\n              className='eachUserLink'\r\n            >\r\n              <span className='avatar'>\r\n                <Avatar>{this.props.profile.name.charAt(0)}</Avatar>\r\n              </span>\r\n              {this.props.profile.name}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\n\r\nclass Users extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='users-list'>\r\n        {this.props.users.map(user => (\r\n          <User profile={user} key={user.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Users;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d='M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z' />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default class UserProfile extends React.Component {\r\n  state = {\r\n    profile: [],\r\n    loading: false\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`\r\n      )\r\n      .then(response => {\r\n        this.setState({ profile: response.data, loading: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <div className='ProfileContainer'>\r\n        <Link to='/List-Users'>GoBack</Link>\r\n        <Card variant='outlined' className='Userprofile'>\r\n          <CardContent>\r\n            {' '}\r\n            <div>\r\n              <div>\r\n                <figure className='userprofileimage'>\r\n                  <img\r\n                    className='userprofileimage'\r\n                    src='https://cdn.imgbin.com/21/23/1/imgbin-computer-icons-female-user-profile-avatar-material-x1Zz1EDVQQssccaQu0dy0VFGy.jpg'\r\n                    alt='image'\r\n                  />\r\n                  <figcaption>{this.state.profile.name}</figcaption>\r\n                </figure>\r\n              </div>\r\n              <div className='information'>\r\n                <strong>{this.state.profile.username}</strong>\r\n                <br />\r\n                <MailIcon color='secondary' /> {this.state.profile.email}\r\n                <br />\r\n                <CallIcon color='secondary' /> {this.state.profile.phone}\r\n                <br />\r\n                <HomeIcon color='secondary' />{' '}\r\n                {this.state.profile.address.street}\r\n                <br />\r\n                {this.state.profile.address.suite}\r\n                <br />\r\n                {this.state.profile.address.city}\r\n                <br />\r\n                {this.state.profile.address.zipcode}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Route , Switch , Link , BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst headerstyle = () => {\r\n  return {\r\n    color :'white',\r\n    fontSize:'22px',\r\n    textDecoration:'none',\r\n    padding : '0px 50px'\r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         \r\n          <Typography variant=\"h6\" className={classes.title} >\r\n          <Link to=\"/\" className = \"header\" style={headerstyle()} >\r\n                Home     \r\n              </Link>\r\n          </Typography>\r\n          <Link to=\"/List-Users\"  style={headerstyle()}>\r\n                List-Users\r\n              </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { Fragment } from 'react';\nimport {Route , Switch , Link , BrowserRouter} from 'react-router-dom';\nimport './App.css';\nimport Users from './components/Users';\nimport UserProfile from './components/UserProfile';\nimport axios from 'axios';\nimport Header from './Header';\n\nclass App extends React.Component\n {\n\n  state = {\n    users : []\n  };\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/users')\n    .then(response => this.setState({users : response.data}))\n  }\n\n   render(){\n    return (\n   \n      <BrowserRouter>\n        <Fragment>\n          <Header />\n        <Switch>\n        <Route exact path=\"/\" render={ () => <h1>Welcome .....</h1>}/>\n          <Route exact path=\"/List-Users\" render={ () => <div><Users users= {this.state.users} /></div>}/>\n          <Route exact path=\"/user/:id\" render={props => (<UserProfile {...props}  />)} />\n        </Switch>\n          \n          \n        </Fragment>\n      </BrowserRouter>\n      \n    );\n   }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}